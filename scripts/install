#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

ynh_app_setting_set --app=$app --key=version --value=$(ynh_app_upstream_version)

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating $app's MySQL database..." --weight=1

ynh_mysql_execute_as_root --sql="ALTER DATABASE $db_name charset=utf8"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --source_id="main" --dest_dir="$install_dir"

# Create necessary files
touch $install_dir/htdocs/conf/conf.php

#=================================================
# PREPARE AND INSTALL APP
#=================================================
ynh_script_progression --message="Adding $app's configuration file..." --weight=1

ynh_add_config --template="install.forced.php" --destination="$install_dir/htdocs/install/install.forced.php"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

# Create a dedicated php-fpm config
ynh_add_fpm_config

# Create a dedicated nginx config
ynh_add_nginx_config

# Use logrotate to manage application logfile(s)
ynh_use_logrotate --logfile="$install_dir/documents/dolibarr.log"

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================

# Set right permissions for curl install
chown -R "$app:" "$install_dir"

# Installation with curl

ynh_script_progression --message="Finalizing installation..." --weight=1

ynh_script_progression --message="Generate fileconf" --weight=1
ynh_local_curl "/install/fileconf.php" "testpost=ok"

ynh_exec_fully_quiet sleep 5

ynh_script_progression --message="installation - step 1" --weight=3
ynh_local_curl "/install/step1.php" "testpost=ok" "action=set"

ynh_exec_fully_quiet sleep 5

ynh_script_progression --message="installation - step 2 (may take a while)..." --weight=72
ynh_local_curl "/install/step2.php" "testpost=ok" "action=set"

ynh_exec_fully_quiet sleep 5

ynh_script_progression --message="installation - step 4" --weight=3
ynh_local_curl "/install/step4.php" "testpost=ok" "action=set"

ynh_exec_fully_quiet sleep 5

# Generate a random password for the admin user (will be ignored because of LDAP)
password=$(ynh_string_random 8)

ynh_script_progression --message="installation - step 5" --weight=4
ynh_local_curl "/install/step5.php" "testpost=ok" "action=set" "pass=$password" "pass_verif=$password"

ynh_exec_fully_quiet sleep 5

ynh_script_progression --message="configuring LDAP" --weight=1

# Populate the LDAP parameters
ynh_mysql_connect_as --user=$db_name --password=$db_pwd --database=$db_name < ../conf/sql/ldap.sql

# Populate the database with YNH users.
ynh_mysql_connect_as --user=$db_name --password=$db_pwd --database=$db_name < ../conf/sql/ldap_user.sql

if php$phpversion $install_dir/scripts/user/sync_users_ldap2dolibarr.php commitiferror --server=localhost -y; then
    ynh_print_info --message="LDAP user update ok"
else
    ynh_print_info --message="LDAP user update ended with error"
fi

#=================================================
# MODIFY A CONFIG FILE
#=================================================
ynh_script_progression --message="configuring config file" --weight=1

# Setup HTTP auth in conf
ynh_replace_string --match_string="dolibarr_main_authentication='dolibarr'" --replace_string="dolibarr_main_authentication='http'" --target_file="$install_dir/htdocs/conf/conf.php"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$install_dir/htdocs/conf/conf.php"

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring permissions..." --weight=1

# Set permissions on app files
if [ ! -f "$data_dir/install.lock" ]; then
    echo 'This is a lock file to prevent use of install pages (set with permission 440)' > "$data_dir/install.lock"
    chown $app:$app "$data_dir/install.lock"
    chmod 440 "$data_dir/install.lock"
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

chmod 644 "$install_dir/htdocs/conf/conf.php"
mkdir -p "$data_dir"
chown -R $app: "$data_dir"
chmod go-w $data_dir

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
